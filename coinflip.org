coinflip -*- mode: org -*-
#+STARTUP: indent
#+STARTUP: entitiespretty

* coinflip/
** coinflip/
*** \under{}\under{}init\under{}\under{}.py
**** CoinflipConfig
**** ViewConfig
**** ParameterConfig
**** CoinflipResult
*** coinflip\under{}controller.py
**** config\under{}builder([str]) -> Config 
**** flip\under{}a\under{}coin(CoinflipConfig, model, ParameterConfig, ViewConfig)  
-> CoinflipResult
*** coinflip\under{}models/
**** \under{}\under{}init\under{}\under{}.py
***** COINFLIPS ({str: module})
**** base\under{}model.py
***** ModelConfig
***** the\under{}ask(ModelConfig, CoinflipConfig) -> [float]
***** the\under{}answer([float]) -> CoinflipResult
**** iching\under{}model.py; side-effects
**** uniform\under{}model.py
*** parameter\under{}models/
***** \under{}\under{}init\under{}\under{}.py
****** MODEL\under{}PARAMS ({str: [module]})
*** coinflip\under{}view.py
**** render\under{}coinflip\under{}representation(CoinflipResult, ViewConfig) -> None; side-effects
*** random\under{}org\under{}dao.py
**** format\under{}url(CoinflipConfig) -> str
**** make\under{}request(url) --> requests.get()
**** read\under{}request(requests.get()) --> [float]
*** logger.py
** tests/
*** test\under{}random\under{}org\under{}dao\under{}integration.py
*** test\under{}coinflip\under{}view.py
*** test\under{}coinflip\under{}models.py
**** test\under{}iching\under{}model() 
**** test\under{}bernoulli\under{}model() 
** setup.py
*** requirements
**** requests
** requirements.lock
*** pytest
*** mock
